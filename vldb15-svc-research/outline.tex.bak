\documentclass{sig-alternate}

\usepackage{enumitem}
\usepackage{framed}
\usepackage{listings}
\usepackage{amstext}
\usepackage{amstext}
\usepackage{pdfpages}
\usepackage{alltt}
\usepackage{epstopdf}
\usepackage{xspace,colortbl}
\usepackage[USenglish]{babel}
\usepackage{multirow}
\usepackage{url}
\usepackage{subfigure}
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage{fmtcount}
\usepackage{amsfonts}
\usepackage{xspace}
\usepackage{amsmath}
\usepackage{multirow}
\usepackage[mathscr]{eucal}
%\usepackage{psfrag}
\usepackage{colortbl}
\usepackage{bm}
\usepackage[nospace]{cite}




\lstset{basicstyle=\small,breaklines=true}

\linespread{0.94}%

\makeatletter
\def\@copyrightspace{\relax}
\makeatother

\begin{document}


\newtheorem{theorem}{Theorem}
\newtheorem{example}{Example}
\newtheorem{definition}{Definition}
\newtheorem{proposition}{Proposition}
\newtheorem{lemma}{Lemma}
\newtheorem{corollary}{Corollary}

\newcommand{\dataset}{data set\xspace}
\newcommand{\datasets}{data sets\xspace}
\newcommand{\spview}{\textsf{SPView}\xspace}
\newcommand{\fjview}{\textsf{FJView}\xspace}
\newcommand{\aggview}{\textsf{AggView}\xspace}
\newcommand{\hashfunc}[1]{\textsf{hashfunc}(#1)\xspace}

\newcommand{\avgfunc}{\ensuremath{\texttt{avg} }\xspace}
\newcommand{\countfunc}{\ensuremath{\texttt{count}}\xspace}
\newcommand{\sumfunc}{\ensuremath{\texttt{sum} }\xspace}
\newcommand{\ratio}{\ensuremath{\rho }\xspace}


\newcommand{\tbl}[1]{\textsf{#1}\xspace}
\newcommand{\field}[1]{\textsf{#1}\xspace}
\newcommand{\cost}{\textrm{cost}\xspace}
\newcommand{\ans}{\textsf{ans}\xspace}
\newcommand{\dans}{\Delta\textsf{ans}\xspace}
\newcommand{\cqp}{correcting query processing\xspace}
\newcommand{\Cqp}{Correcting query processing\xspace}

\newcommand{\reminder}[1]{{{\textcolor{magenta}{\{\{\bf #1\}\}}}\xspace}}
\newcommand{\specialcell}[2][c]{%
  \begin{tabular}[#1]{@{}c@{}}#2\end{tabular}}

%\newcommand{\reminder}[1] {}
\pagestyle{plain}

\title{A Data Cleaning Approach for Approximately Up-To-Date Results on Stale Materialized Views}

\maketitle

\begin{abstract}
Materialized views, stored pre-computed query results, are used to optimize queries on large datasets.
Materialized views can become out-date when base tables change and any queries issued to these views will give \emph{stale} results.
Maintaining materialized views has been well studied but is often very costly.
In this work, we model the view maintenance problem as a data cleaning problem and treat a stale row in a materialized view as a type of data error.
In particular, we maintain a small sample of updates to a materialized view and infer how these updates affect a queries on a the stale view.
For common aggregate queries (\sumfunc, \countfunc, and \avgfunc), we can derive a correction factor from the sample to ``clean" the stale query result.
We bound our corrections in analytic confidence intervals, and in fact, we show that our technique is optimal with respect to estimate variance.
As sampling can be senstive to long-tailed distributions, we further consider an outlier indexing technique to give increased accuracy when the data distributions are skewed.
We evaluate this approach on real and synthetic datasets and in both a single node (MySQL) and distributed environment (Apache Spark).
In one large scale experiment using 20-node Apache Spark cluster, we derived a 700,000,000 row view from a 1TB activity log base dataset.
We found that maintaining a 5\% sample was 16.3x faster than full maintenance yet only with mean query error of 1.2\%.
\end{abstract}

\input{introduction.tex}
\input{problem_statement.tex}
\input{architecture.tex}
\input{correction.tex}
\input{sampling.tex}
\input{outlier.tex}
%\input{analysis.tex}
\input{experiments.tex}
\input{conclusion.tex}

\bibliographystyle{abbrv}
\fontsize{6.8pt}{6.7pt} \selectfont
\bibliographystyle{abbrv}
\bibliography{ref} 

\end{document}